#!/usr/bin/env bash

set -e

#create a VPC
VPC_ID=$(aws ec2 create-vpc \
--cidr-block "172.1.0.0/16" \
--region us-east-2 \
--tag-specifications 'ResourceType=vpc,Tags=[{Key=Name,Value=My-vpc}]' \
--query Vpc.VpcId \
--output text)

echo "vpc_id: $VPC_ID"

#turn the hostname on
aws ec2 modify-vpc-attribute --vpc-id $VPC_ID --enable-dns-hostnames Value=true

#create an IGW
IGW_ID=$(aws ec2 create-internet-gateway \
--region us-east-2 \
--tag-specifications 'ResourceType=internet-gateway,Tags=[{Key=Name,Value=My-vpc-igw}]' \
--query InternetGateway.InternetGatewayId \
--output text)

echo "igw_id: $IGW_ID"

#attach an IGW
aws ec2 attach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $VPC_ID

#create a subnet
Subnet_ID=$(aws ec2 create-subnet \
--vpc-id $VPC_ID \
--cidr-block "172.1.0.0/20" \
--tag-specifications 'ResourceType=subnet,Tags=[{Key=Name,Value=subnet-1}]' \
--query Subnet.SubnetId \
--output text)

echo "subnet_id: $Subnet_ID"

#auto-assign ipv4 on creaton
aws ec2 modify-subnet-attribute --subnet-id $Subnet_ID --map-public-ip-on-launch
#describe route table
RT_ID=$(aws ec2 describe-route-tables \
--filters Name=vpc-id,Values=$VPC_ID Name=association.main,Values=true \
--query RouteTables[].RouteTableId \
--output text)

echo "rt_id: $RT_ID"

#explicitly associate a subnet
aws ec2 associate-route-table \
--route-table-id $RT_ID \
--subnet-id $Subnet_ID

#add a route for our RT to IGW
aws ec2 create-route \
--route-table-id $RT_ID \
--destination-cidr-block "0.0.0.0/0" \
--gateway-id $IGW_ID